{"version":3,"file":"static/js/659.d669ed05.chunk.js","mappings":"mLAMA,MA4FA,EA5FcA,KACZ,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,GAAIC,SAAU,MACzDC,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,IACjCK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgBC,IACpBX,EAAY,IAAKD,EAAU,CAACY,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,OAAQ,EAyC/D,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4DAA2DC,UACxEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,YAGjEb,IAAWW,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gCAA+BC,SAAEb,KAC1Dc,EAAAA,EAAAA,MAAA,QAAMC,SA7CSC,UACnBT,EAAEU,iBACFhB,EAAW,IAEX,IACE,MAAMiB,QAAYC,EAAAA,EAAMC,KACtB,uCACAzB,EACA,CAAE0B,iBAAiB,IAKrB,GAFAC,QAAQC,IAAI,uBAAmBL,EAAIM,OAE9BN,EAAIM,OAASN,EAAIM,KAAKC,KACzB,MAAM,IAAIC,MAAM,wCAIlBtB,GACEuB,EAAAA,EAAAA,IAAQ,CAAEF,KAAMP,EAAIM,KAAKC,KAAMG,KAAMV,EAAIM,KAAKI,KAAMC,MAAOX,EAAIM,KAAKK,SAItE5B,EAAW,4BACX6B,YAAW,KACa,UAAlBZ,EAAIM,KAAKI,KACX1B,EAAS,oBAETA,EAAS,WACX,GACC,IAEL,CAAE,MAAO6B,GAAQ,IAADC,EAAAC,EAAAC,EACdZ,QAAQS,MAAM,uBAAgC,QAAdC,EAAAD,EAAMI,gBAAQ,IAAAH,OAAA,EAAdA,EAAgBR,OAAQO,GACxD9B,EAAW,YAAsB,QAAdgC,EAAAF,EAAMI,gBAAQ,IAAAF,GAAM,QAANC,EAAdD,EAAgBT,YAAI,IAAAU,OAAN,EAAdA,EAAsBH,QAAS,wBACpD,GAUkCnB,UAAU,YAAWC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,SACEyB,KAAK,QACL3B,KAAK,QACL4B,YAAY,QACZ3B,MAAOf,EAASG,MAChBwC,SAAUhC,EACVM,UAAU,4BACV2B,UAAQ,KAEV5B,EAAAA,EAAAA,KAAA,SACEyB,KAAK,WACL3B,KAAK,WACL4B,YAAY,WACZ3B,MAAOf,EAASI,SAChBuC,SAAUhC,EACVM,UAAU,4BACV2B,UAAQ,KAEV5B,EAAAA,EAAAA,KAAA,UACEyB,KAAK,SACLxB,UAAU,0EAAyEC,SACpF,cAIHC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,2BAA0BC,SAAA,CAAC,4BAEtCF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAO,CAACC,GAAG,UAAU7B,UAAU,qBAAoBC,SAAC,mBAKrD,C","sources":["components/Pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../redux/authSlice\"; // Import Redux Action\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n  \r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/api/auth/login\",\r\n        formData,\r\n        { withCredentials: true }\r\n      );\r\n  \r\n      console.log(\"✅ API Response:\", res.data);\r\n  \r\n      if (!res.data || !res.data.user) {\r\n        throw new Error(\"User data not found in API response!\");\r\n      }\r\n  \r\n      // ✅ Store user data in Redux\r\n      dispatch(\r\n        setUser({ user: res.data.user, role: res.data.role, token: res.data.token })\r\n      );\r\n  \r\n      // ✅ Redirect based on Role\r\n      setMessage(\"✅ Login Successful!\");\r\n      setTimeout(() => {\r\n        if (res.data.role === \"admin\") {\r\n          navigate(\"/admin/dashboard\");\r\n        } else {\r\n          navigate(\"/profile\");\r\n        }\r\n      }, 1000);\r\n  \r\n    } catch (error) {\r\n      console.error(\"❌ Login Error:\", error.response?.data || error);\r\n      setMessage(\"❌ \" + (error.response?.data?.error || \"Invalid credentials!\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md w-80\">\r\n        <h2 className=\"text-2xl font-bold text-center mb-6 text-blue-600\">\r\n          Sign Up\r\n        </h2>\r\n        {message && <p className=\"text-center mb-4 text-red-500\">{message}</p>}\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"w-full p-3 border rounded\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className=\"w-full p-3 border rounded\"\r\n            required\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-600 text-white py-3 rounded hover:bg-blue-700 transition\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n        <p className=\"text-sm mt-3 text-center\">\r\n          Already have an account?\r\n          <NavLink to=\"/Signin\" className=\"text-blue-600 ml-1\">\r\n            Sign In\r\n          </NavLink>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","formData","setFormData","useState","email","password","message","setMessage","navigate","useNavigate","dispatch","useDispatch","handleChange","e","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","res","axios","post","withCredentials","console","log","data","user","Error","setUser","role","token","setTimeout","error","_error$response","_error$response2","_error$response2$data","response","type","placeholder","onChange","required","NavLink","to"],"sourceRoot":""}