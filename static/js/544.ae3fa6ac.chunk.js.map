{"version":3,"file":"static/js/544.ae3fa6ac.chunk.js","mappings":"0JAGA,MAyDA,EAzDsBA,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAmBnC,OAjBAG,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,QAAYC,EAAAA,EAAMC,IAAI,wCAAyC,CACnEC,iBAAiB,IAGnBT,EAAYM,EAAII,KAAKX,SACvB,CAAE,MAAOY,GACPC,QAAQV,MAAM,kCAA8BS,GAC5CR,EAAS,mCACX,GAGFU,EAAe,GACd,KAGDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wCAAuCC,SAAC,iCAErDd,GACCe,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2BAA0BC,SAAEd,IACvCH,EAASmB,OAAS,GACpBD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gDAA+CC,UAC5DF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,gDAA+CC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,cAAaC,UAC5BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,UACrCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,WACrCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4CAA2CC,SAAC,aAC1DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAAC,kBAGzCC,EAAAA,EAAAA,KAAA,SAAAD,SACGjB,EAASoB,KAAKC,IACbN,EAAAA,EAAAA,MAAA,MAAsBC,UAAU,sCAAqCC,SAAA,EACnEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEI,EAAQC,QACpCJ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEI,EAAQE,SACpCL,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kCAAiCC,SAAEI,EAAQG,WACzDN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEI,EAAQI,YAJ7BJ,EAAQK,eAWzBR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAA2BC,SAAC,gCAEvC,C","sources":["components/Dashboard/AdminContacts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminContacts = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/api/contact/all\", {\r\n          withCredentials: true, // ‚úÖ Cookies Authentication Enable ‡§ï‡§∞‡•á‡§Ç\r\n        });\r\n        //console.log(\"‚úÖ Contact Queries Fetched:\", res.data);\r\n        setContacts(res.data.contacts);\r\n      } catch (err) {\r\n        console.error(\"‚ùå Error fetching contacts:\", err);\r\n        setError(\"Failed to fetch contact queries.\");\r\n      }\r\n    };\r\n\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-5\">\r\n      <h2 className=\"text-2xl font-bold mb-4 text-blue-700\">üì© Contact Queries</h2>\r\n\r\n      {error ? (\r\n        <p className=\"text-red-500 text-center\">{error}</p>\r\n      ) : contacts.length > 0 ? (\r\n        <div className=\"overflow-x-auto bg-white shadow-lg rounded-lg\">\r\n          <table className=\"w-full border-collapse border border-gray-300\">\r\n            <thead className=\"bg-gray-200\">\r\n              <tr>\r\n                <th className=\"border p-3 text-left\">Name</th>\r\n                <th className=\"border p-3 text-left\">Email</th>\r\n                <th className=\"border p-3 text-left hidden md:table-cell\">Address</th>\r\n                <th className=\"border p-3 text-left\">Message</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {contacts.map((contact) => (\r\n                <tr key={contact._id} className=\"border hover:bg-gray-100 transition\">\r\n                  <td className=\"p-3 border\">{contact.name}</td>\r\n                  <td className=\"p-3 border\">{contact.email}</td>\r\n                  <td className=\"p-3 border hidden md:table-cell\">{contact.address}</td>\r\n                  <td className=\"p-3 border\">{contact.message}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-gray-500 text-center\">No queries submitted yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminContacts;\r\n\r\n"],"names":["AdminContacts","contacts","setContacts","useState","error","setError","useEffect","async","res","axios","get","withCredentials","data","err","console","fetchContacts","_jsxs","className","children","_jsx","length","map","contact","name","email","address","message","_id"],"sourceRoot":""}