{"version":3,"file":"static/js/750.ba305696.chunk.js","mappings":"iJAEA,MAAMA,GAAOC,EAAAA,EAAAA,OAAK,IAAM,+BAClBC,GAAWD,EAAAA,EAAAA,OAAK,IAAM,+BACtBE,GAAaF,EAAAA,EAAAA,OAAK,IAAM,+BACxBG,GAAeH,EAAAA,EAAAA,OAAK,IAAM,+BAahC,EAXaI,KAETC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4BAA2BC,SAAC,eAAgBA,SAAA,EAC5EF,EAAAA,EAAAA,KAACT,EAAI,KACLS,EAAAA,EAAAA,KAACP,EAAQ,KACTO,EAAAA,EAAAA,KAACN,EAAU,KACXM,EAAAA,EAAAA,KAACL,EAAY,M","sources":["components/Home/Home.js"],"sourcesContent":["import React, { lazy, Suspense } from \"react\";\r\n\r\nconst Hero = lazy(() => import(\"./Hero\"));\r\nconst Features = lazy(() => import(\"./Features\"));\r\nconst SkillTrack = lazy(() => import(\"../Pages/SkillTrack\"));\r\nconst Testimonials = lazy(() => import(\"./Testimonials\"));\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Suspense fallback={<h1 className=\"text-center text-blue-500\">Loading...</h1>}>\r\n      <Hero />\r\n      <Features />\r\n      <SkillTrack />\r\n      <Testimonials />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n  \r\n  // In the above code, we have used the  Suspense  component to wrap the components that are being loaded lazily. We have also used the  fallback  prop to display a loading message while the components are being loaded. \r\n  // Now, when you run the application, you will see the loading message while the components are being loaded. \r\n  // Conclusion \r\n  // In this article, we have learned how to use the  React.lazy()  function to load components lazily in a React application. We have also learned how to use the  Suspense  component to display a loading message while the components are being loaded. \r\n  // I hope this article was helpful to you. Please let me know your thoughts in the comments section. \r\n  // Happy coding! \r\n  // Peer Review Contributions by:  Lalithnarayan C"],"names":["Hero","lazy","Features","SkillTrack","Testimonials","Home","_jsxs","Suspense","fallback","_jsx","className","children"],"sourceRoot":""}