{"version":3,"file":"static/js/839.f90bde03.chunk.js","mappings":"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","sources":["components/Pages/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst Shimmer = () => (\r\n  <div className=\"animate-pulse flex flex-col space-y-4 p-6 bg-white shadow-lg rounded-lg w-full max-w-md\">\r\n    <div className=\"h-6 bg-gray-300 rounded w-3/4\"></div>\r\n    <div className=\"h-4 bg-gray-300 rounded w-1/2\"></div>\r\n    <div className=\"h-4 bg-gray-300 rounded w-2/3\"></div>\r\n    <div className=\"h-4 bg-gray-300 rounded w-3/4\"></div>\r\n    <div className=\"h-3 bg-gray-300 rounded-full w-full mt-4\"></div>\r\n    <div className=\"h-10 bg-gray-300 rounded w-full mt-4\"></div>\r\n  </div>\r\n);\r\n\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n  const { user,role } = useSelector((state) => state.auth); \r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchProfileAndOrders = async () => {\r\n      try {\r\n        const res = await axios.get(\"https://edu-backend-2.onrender.com/api/auth/me\", {\r\n          withCredentials: true,\r\n        });\r\n\r\n        if (!res.data?.user) throw new Error(\"User not found!\");\r\n        \r\n        const ordersRes = await axios.get(\"https://edu-backend-2.onrender.com/api/payment/orders\", {\r\n          params: { userId: res.data.user._id },\r\n          withCredentials: true,\r\n        });\r\n\r\n        setOrders(ordersRes.data.orders);\r\n      } catch (err) {\r\n        navigate(\"/login\"); // Redirect if not logged in\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProfileAndOrders();\r\n  }, [navigate]);\r\n\r\n  if (loading) return <Shimmer />;\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 px-4\">\r\n      <motion.div\r\n        className=\"bg-white p-6 shadow-lg rounded-lg w-full max-w-md\"\r\n        initial={{ opacity: 0, scale: 0.9 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <h2 className=\"text-2xl font-bold text-center mb-4\">Profile</h2>\r\n        <p><strong>Name:</strong> {user?.name}</p>\r\n        <p><strong>Email:</strong> {user?.email}</p>\r\n        <p><strong>Role:</strong> {role}</p>\r\n        {user?.role === \"user\" && (\r\n          <div className=\"mt-4\">\r\n            <h3 className=\"font-semibold\">Course Progress</h3>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-3\">\r\n              <div className=\"bg-green-500 h-3 rounded-full w-[60%]\"></div>\r\n            </div>\r\n            <p className=\"text-sm text-gray-600\">60% completed</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"font-semibold\">ðŸ›’ Your Purchases</h3>\r\n          {orders.length > 0 ? (\r\n            <ul className=\"list-disc pl-5 text-gray-700\">\r\n              {orders.map((order) => (\r\n                <li key={order._id}>\r\n                  {order.courseTitle || \"Unknown Course\"} - â‚¹{order.amount}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p className=\"text-gray-500\">No purchases yet.</p>\r\n          )}\r\n        </div>\r\n        \r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n"],"names":["Shimmer","_jsxs","className","children","_jsx","Profile","navigate","useNavigate","user","role","useSelector","state","auth","orders","setOrders","useState","loading","setLoading","useEffect","async","_res$data","res","axios","get","withCredentials","data","Error","ordersRes","params","userId","_id","err","fetchProfileAndOrders","motion","div","initial","opacity","scale","animate","transition","duration","name","email","length","map","order","courseTitle","amount"],"sourceRoot":""}